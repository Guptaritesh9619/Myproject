# -*- coding: utf-8 -*-
"""untitled2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/gist/Guptaritesh9619/857d3d3b28c439d81edd5d2d3246c993/untitled2.ipynb

Import necessary libraries:
"""

import pandas as pd

import numpy as np

import matplotlib.pyplot as plt

"""Import Data"""

from sklearn.datasets import load_digits

"""# ***handwritten digit prediction model***"""

df = load_digits()

_, axes = plt.subplots(nrows=1,ncols=4,figsize=(10,3))
for ax,image,lable in zip(axes,df.images,df.target):
  ax.set_axis_off()
  ax.imshow(image,cmap=plt.cm.gray_r,interpolation="nearest")
  ax.set_title("Training: %i lable")

df.images.shape

df.images[0]

df.images[0].shape

len(df.images)

n_sample =len(df.images)
data = df.images.reshape((n_sample,-1))

data[0]

data[0].shape

data.shape

"""Scalling Image data"""

data.min()

data.max()

data = data/16

data.min()

data.max()

data[0]

"""Split the data into training and testing sets"""

from sklearn.model_selection import train_test_split

x_train,x_test,y_tarin,y_test = train_test_split(data,df.target,test_size=0.3)

x_train.shape,x_test.shape,y_tarin.shape,y_test.shape

from sklearn.ensemble import RandomForestClassifier

rf = RandomForestClassifier()

rf.fit(x_train,y_tarin)

"""Make predictions"""

y_pred = rf.predict(x_test)

y_pred

from sklearn.metrics import confusion_matrix, classification_report

confusion_matrix(y_test,y_pred)

""" Evaluate the model &

*   List item
*   List item


 Visualize a few predictions

"""

print (classification_report(y_test,y_pred))

